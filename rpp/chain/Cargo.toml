[package]
name = "rpp-chain"
version.workspace = true
edition.workspace = true
rust-version = "1.79"
license-file.workspace = true
homepage.workspace = true
repository.workspace = true
readme.workspace = true
build = "build.rs"

[features]
default = ["prover-mock"]
nightly-prover = [
    "dep:prover_stwo_backend",
    "prover_stwo_backend/prover-stwo",
    "dep:stwo",
    "rpp-crypto-vrf/nightly-prover",
]
prover-stwo = [
    "nightly-prover",
    "prover-backend-interface/prover-stwo",
    "rpp-consensus/prover-stwo",
]
prover-stwo-simd = [
    "prover-stwo",
    "nightly-prover",
    "prover-backend-interface/prover-stwo-simd",
    "prover_stwo_backend/simd",
    "rpp-consensus/prover-stwo-simd",
]
prover-mock = [
    "prover-backend-interface/prover-mock",
    "rpp-consensus/prover-mock",
    "rpp-wallet?/prover-mock",
]
backend-plonky3 = [
    "dep:p3-air",
    "dep:p3-baby-bear",
    "dep:p3-challenger",
    "dep:p3-commit",
    "dep:p3-field",
    "dep:p3-matrix",
    "dep:p3-mersenne-31",
    "dep:p3-poseidon",
    "dep:p3-util",
    # Vendored via cargo/config.toml to keep the workspace buildable offline.
]
backend-rpp-stark = ["dep:rpp-stark", "rpp-wallet?/backend-rpp-stark"]
vendor_electrs = [
    "dep:rpp-wallet",
    "rpp-wallet/vendor_electrs",
]

[dependencies]
anyhow = "1"
axum = { version = "0.7", features = ["json"] }
base64 = "0.21"
bincode = "1"
blake2 = "0.10"
blake3 = "1.8"
async-trait = "0.1"
clap = { version = "4.5", features = ["derive"] }
ed25519-dalek = "2.1"
hex.workspace = true
libp2p = { path = "../../vendor/libp2p/libp2p", default-features = false }
log.workspace = true
malachite = { version = "=0.4.18", features = ["naturals_and_integers"] }
metrics.workspace = true
opentelemetry = "=0.30.0"
opentelemetry_sdk = "=0.30.0"
opentelemetry-otlp = { version = "=0.30.0" }
opentelemetry-http = "=0.30.0"
num-traits = "0.2"
once_cell = "1.19"
parking_lot = "0.12"
prover-backend-interface = { path = "../zk/backend-interface" }
prover_stwo_backend = { workspace = true, optional = true }
reqwest = { version = "0.12.24", default-features = false, features = ["blocking", "json", "rustls-tls"] }
rpp-consensus = { path = "../consensus", default-features = false }
rpp-crypto-vrf = { path = "../crypto-vrf" }
rpp-p2p = { path = "../p2p" }
rpp-identity-tree = { path = "../identity-tree" }
rpp-stark = { path = "../../vendor/rpp-stark", optional = true }
rpp-wallet = { path = "../wallet", default-features = false, optional = true }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
semver = "1.0"
sha2 = "0.10"
storage-firewood = { path = "../../storage-firewood" }
stwo = { package = "stwo-official", path = "../../prover/prover_stwo_backend/vendor/stwo-dev/0.1.1/crates/stwo", default-features = false, optional = true }
thiserror.workspace = true
tokio = { workspace = true, features = ["macros", "rt", "rt-multi-thread", "sync", "time", "net"] }
tokio-stream = { version = "0.1", features = ["sync"] }
toml = "0.8"
tower = { version = "0.4", features = ["limit", "util"] }
tracing.workspace = true
uuid = { version = "1", features = ["v4"] }

# Plonky3 backend dependencies
p3-air = { workspace = true, optional = true }
p3-baby-bear = { workspace = true, optional = true }
p3-challenger = { workspace = true, optional = true }
p3-commit = { workspace = true, optional = true }
p3-field = { workspace = true, optional = true }
p3-matrix = { workspace = true, optional = true }
p3-mersenne-31 = { workspace = true, optional = true }
p3-poseidon = { workspace = true, optional = true }
p3-util = { workspace = true, optional = true }

[dev-dependencies]
rand = { version = "0.8", features = ["std", "std_rng"] }
tempfile.workspace = true
tracing-test = "0.2"
jsonschema = "0.17"
proptest = "1.4"

[build-dependencies]
rustc_version = "0.4"

[lints]
workspace = true
