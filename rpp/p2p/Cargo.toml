[package]
name = "rpp-p2p"
version = "0.1.0"
edition = "2021"
rust-version = "1.83.0"

[features]
default = [
    "identify",
    "ping",
    "gossipsub",
    "request-response",
    "noise",
    "tcp",
    "plaintext",
    "yamux",
    "metrics",
]

identify = ["dep:libp2p-identify"]
ping = ["dep:libp2p-ping"]
gossipsub = ["dep:libp2p-gossipsub"]
request-response = ["dep:libp2p-request-response"]
noise = [
    "dep:libp2p-noise",
    "gossipsub",
    "identify",
    "ping",
    "request-response",
]
tcp = [
    "dep:libp2p-tcp",
    "gossipsub",
    "identify",
    "ping",
    "request-response",
]
plaintext = ["dep:libp2p-plaintext"]
yamux = [
    "dep:libp2p-yamux",
    "gossipsub",
    "identify",
    "ping",
    "request-response",
]
quic = ["dep:libp2p-quic"]
metrics = ["dep:libp2p-metrics", "libp2p-gossipsub?/metrics"]

[dependencies]
base64 = "=0.21.7"
async-trait = "0.1"
futures = "0.3"
hex = "=0.4.3"
libp2p-core = { path = "../../vendor/libp2p/core" }
libp2p-identify = { path = "../../vendor/libp2p/protocols/identify", optional = true }
libp2p-ping = { path = "../../vendor/libp2p/protocols/ping", optional = true }
libp2p-gossipsub = { path = "../../vendor/libp2p/protocols/gossipsub", optional = true }
libp2p-request-response = { path = "../../vendor/libp2p/protocols/request-response", optional = true }
libp2p-noise = { path = "../../vendor/libp2p/transports/noise", optional = true }
libp2p-tcp = { path = "../../vendor/libp2p/transports/tcp", optional = true }
libp2p-plaintext = { path = "../../vendor/libp2p/transports/plaintext", optional = true }
libp2p-yamux = { path = "../../vendor/libp2p/muxers/yamux", optional = true }
libp2p-quic = { path = "../../vendor/libp2p/transports/quic", optional = true }
libp2p-metrics = { version = "=0.17.0", optional = true }
rpp-p2p-macros = { path = "macros" }
libp2p_swarm = { package = "libp2p-swarm", path = "../../vendor/libp2p/swarm", features = ["tokio"] }
libp2p_identity = { package = "libp2p-identity", path = "../../vendor/libp2p/identity" }
parking_lot = "0.12"
serde = { version = "=1.0.225", features = ["derive"] }
serde_json = "=1.0.145"
prometheus-client = "0.23"
thiserror = "=2.0.12"
tokio = { version = "1.37", features = ["macros", "rt-multi-thread", "time"] }
toml = "0.8"
tracing = "=0.1.41"
blake3 = "=1.8.2"
blake2 = "=0.10.6"
rand = { version = "=0.8.5", features = ["std"] }
schnorrkel = "0.11"

[dev-dependencies]
tempfile = "3.10"
proptest = "1.4"
jsonschema = "0.17"
rpp-chain = { path = "../chain" }
