name: Continuous Integration

on:
  push:
    branches:
      - main
      - release/*
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  gitleaks:
    name: Secret scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run gitleaks
        id: gitleaks
        uses: gitleaks/gitleaks-action@v2
        continue-on-error: true
        with:
          config-path: .gitleaks.toml
          report-format: json
          report-path: gitleaks-report.json

      - name: Upload gitleaks report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json

      - name: Fail if gitleaks found issues
        if: steps.gitleaks.outcome == 'failure'
        run: exit 1

  cargo-audit:
    name: Cargo audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo artifacts
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-audit
        run: cargo install cargo-audit --locked

      - name: Run cargo audit
        id: cargo_audit
        continue-on-error: true
        run: |
          set -euo pipefail
          cargo audit --json > cargo-audit.json

      - name: Upload cargo audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cargo-audit-report
          path: cargo-audit.json

      - name: Fail if cargo audit failed
        if: steps.cargo_audit.outcome == 'failure'
        run: exit 1

  cargo-deny:
    name: Cargo deny
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo artifacts
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-deny
        run: cargo install cargo-deny --locked

      - name: Run cargo deny
        id: cargo_deny
        continue-on-error: true
        run: |
          set -euo pipefail
          cargo deny check --format json --show-stats > cargo-deny.json

      - name: Upload cargo deny report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cargo-deny-report
          path: cargo-deny.json

      - name: Fail if cargo deny failed
        if: steps.cargo_deny.outcome == 'failure'
        run: exit 1
