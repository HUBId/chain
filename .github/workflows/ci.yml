name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  dashboards-json:
    name: Validate dashboard exports
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Validate Grafana JSON exports
        run: |
          set -euo pipefail
          command -v jq >/dev/null 2>&1
          files=(
            "dashboards/pipeline_overview.json"
            "dashboards/pipeline_wallet_intake.json"
            "dashboards/pipeline_proof_validation.json"
            "dashboards/pipeline_consensus_finality.json"
            "dashboards/pipeline_storage_commit.json"
            "dashboards/vrf_overview.json"
            "dashboards/vrf_thresholds.json"
            "observability/pipeline_grafana.json"
          )
          missing=0
          for file in "${files[@]}"; do
            path="docs/${file}"
            if [[ ! -f "${path}" ]]; then
              echo "::error file=${path}::Dashboard export is missing"
              missing=1
              continue
            fi
            jq empty "${path}"
          done
          if [[ ${missing} -ne 0 ]]; then
            echo "One or more dashboard exports are missing."
            exit 1
          fi

  cargo-fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.79.0
          components: rustfmt
      - name: Cache cargo target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}-fmt
          restore-keys: |
            ${{ runner.os }}-cargo-target-
      - name: Run cargo fmt
        run: cargo fmt --check

  cargo-clippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.79.0
          components: clippy
      - name: Cache cargo target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}-clippy
          restore-keys: |
            ${{ runner.os }}-cargo-target-
      - name: Run cargo clippy
        run: cargo clippy --workspace --all-targets --all-features -D warnings

  cargo-test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.79.0
      - name: Cache cargo target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}-test
          restore-keys: |
            ${{ runner.os }}-cargo-target-
      - name: Run cargo test (default features)
        run: cargo test
      - name: Run cargo test (prod prover-stwo)
        run: cargo test --no-default-features --features prod,prover-stwo
