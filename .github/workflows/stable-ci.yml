name: Stable CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: ["", "backend-rpp-stark"]
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.79.0
          components: clippy, rustfmt
      - name: "Build workspace (stable, features='${{ matrix.feature || 'default' }}')"
        id: stable_build
        run: |
          if [ -n "${{ matrix.feature }}" ]; then
            cargo +1.79.0 build --workspace --features "${{ matrix.feature }}" |& tee stable-build.log
          else
            cargo +1.79.0 build --workspace |& tee stable-build.log
          fi
      - name: Warn on stable build failure
        if: failure() && steps.stable_build.outcome == 'failure'
        run: echo "::warning::Stable build failed on Rust 1.79.0. Track blockers in docs/STABLE_MIGRATION_REPORT.md."
      - name: Upload stable build log
        if: failure() && steps.stable_build.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: stable-build-log
          path: stable-build.log
          if-no-files-found: ignore

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: ["", "backend-rpp-stark"]
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.79.0
          components: clippy, rustfmt
      - name: "Test workspace (stable, features='${{ matrix.feature || 'default' }}')"
        id: stable_test
        run: |
          if [ -n "${{ matrix.feature }}" ]; then
            cargo +1.79.0 test --workspace --features "${{ matrix.feature }}" |& tee stable-test.log
          else
            cargo +1.79.0 test --workspace |& tee stable-test.log
          fi
      - name: Warn on stable test failure
        if: failure() && steps.stable_test.outcome == 'failure'
        run: echo "::warning::Stable test suite failed on Rust 1.79.0. Track blockers in docs/STABLE_MIGRATION_REPORT.md."
      - name: Upload stable test log
        if: failure() && steps.stable_test.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: stable-test-log
          path: stable-test.log
          if-no-files-found: ignore

  clippy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: ["", "backend-rpp-stark"]
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.79.0
          components: clippy, rustfmt
      - name: "Clippy (stable, features='${{ matrix.feature || 'default' }}')"
        id: stable_clippy
        run: |
          if [ -n "${{ matrix.feature }}" ]; then
            cargo +1.79.0 clippy --workspace --features "${{ matrix.feature }}" -D warnings |& tee stable-clippy.log
          else
            cargo +1.79.0 clippy --workspace -D warnings |& tee stable-clippy.log
          fi
      - name: Warn on stable clippy failure
        if: failure() && steps.stable_clippy.outcome == 'failure'
        run: echo "::warning::Stable clippy failed on Rust 1.79.0. Track blockers in docs/STABLE_MIGRATION_REPORT.md."
      - name: Upload stable clippy log
        if: failure() && steps.stable_clippy.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: stable-clippy-log
          path: stable-clippy.log
          if-no-files-found: ignore

  fmt:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.79.0
          components: clippy, rustfmt
      - name: Check documentation toolchain references
        run: scripts/ci/check_docs.sh
      - name: Format check (stable)
        id: stable_fmt
        run: |
          cargo +1.79.0 fmt --all -- --check |& tee stable-fmt.log
      - name: Warn on stable fmt failure
        if: failure() && steps.stable_fmt.outcome == 'failure'
        run: echo "::warning::Stable fmt check failed on Rust 1.79.0. Track blockers in docs/STABLE_MIGRATION_REPORT.md."
      - name: Upload stable fmt log
        if: failure() && steps.stable_fmt.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: stable-fmt-log
          path: stable-fmt.log
          if-no-files-found: ignore
