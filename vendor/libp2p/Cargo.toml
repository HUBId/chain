[workspace]
members = [
    "core",
    "identity",
    "libp2p",
    "misc/allow-block-list",
    "misc/connection-limits",
    "misc/memory-connection-limits",
    "misc/multistream-select",
    "misc/peer-store",
    "misc/quick-protobuf-codec",
    "misc/quickcheck-ext",
    "misc/rw-stream-sink",
    "misc/webrtc-utils",
    "muxers/yamux",
    "protocols/gossipsub",
    "protocols/identify",
    "protocols/ping",
    "protocols/request-response",
    "swarm",
    "swarm-derive",
    "transports/noise",
    "transports/tcp",
]
resolver = "2"

[workspace.package]
rust-version = "1.83.0"
edition = "2021"

[workspace.dependencies]
libp2p = { version = "0.56.0", path = "libp2p" }
libp2p-allow-block-list = { version = "0.6.0", path = "misc/allow-block-list" }
libp2p-connection-limits = { version = "0.6.0", path = "misc/connection-limits" }
libp2p-core = { version = "0.43.1", path = "core" }
libp2p-gossipsub = { version = "0.50.0", path = "protocols/gossipsub" }
libp2p-identify = { version = "0.47.0", path = "protocols/identify" }
libp2p-identity = { version = "0.2.12", path = "identity" }
libp2p-memory-connection-limits = { version = "0.5.0", path = "misc/memory-connection-limits" }
libp2p-noise = { version = "0.46.1", path = "transports/noise" }
libp2p-peer-store = { version = "0.1.0", path = "misc/peer-store" }
libp2p-ping = { version = "0.47.0", path = "protocols/ping" }
libp2p-request-response = { version = "0.29.0", path = "protocols/request-response" }
libp2p-swarm = { version = "0.47.0", path = "swarm" }
libp2p-swarm-derive = { version = "=0.35.1", path = "swarm-derive" } # `libp2p-swarm-derive` may not be compatible with different `libp2p-swarm` non-breaking releases.
libp2p-tcp = { version = "0.44.0", path = "transports/tcp" }
libp2p-webrtc-utils = { version = "0.4.0", path = "misc/webrtc-utils" }
libp2p-yamux = { version = "0.47.0", path = "muxers/yamux" }
multistream-select = { version = "0.13.0", path = "misc/multistream-select" }
quick-protobuf-codec = { version = "0.3.1", path = "misc/quick-protobuf-codec" }
quickcheck = { package = "quickcheck-ext", path = "misc/quickcheck-ext" }
rw-stream-sink = { version = "0.4.0", path = "misc/rw-stream-sink" }
tokio = { version = "1.38", default-features = false }
tracing = "0.1.41"
tracing-subscriber = "0.3.19"
unsigned-varint = { version = "0.8.0" }
web-time = "1.1.0"
futures = "0.3.30"
futures-bounded = { version = "0.2.4" }
futures-rustls = { version = "0.26.0", default-features = false }
getrandom = "0.2"
if-watch = "3.2.1"
hashlink = "0.10.0"
hickory-proto = { version = "0.25.2", default-features = false }
hickory-resolver = { version = "0.25.2", default-features = false }
multiaddr = "0.18.1"
multihash = "0.19.1"
prometheus-client = "0.23"
rcgen = "0.13"
ring = "0.17.12"
thiserror = "2"
asynchronous-codec = { version = "0.7.0" }
env_logger = "0.11"


[patch.crates-io]

# Patch away `libp2p-identity` in our dependency tree with the workspace version.
# `libp2p-identity` is a leaf dependency and used within `rust-multiaddr` which is **not** part of the workspace.
# As a result, we cannot just reference the workspace version in our crates because the types would mismatch with what
# we import via `rust-multiaddr`.
# This is expected to stay here until we move `libp2p-identity` to a separate repository which makes the dependency relationship more obvious.
libp2p-identity = { path = "identity" }

[workspace.lints]
rust.unreachable_pub = "warn"
clippy.used_underscore_binding = "warn"
clippy.pedantic = { level = "allow", priority = -1 }
clippy.type_complexity = "allow"
clippy.unnecessary_wraps = "warn"
clippy.manual_let_else = "warn"
clippy.dbg_macro = "warn"

[workspace.metadata.release]
pre-release-hook = [
    "/bin/sh",
    '-c',
    '/bin/sh $WORKSPACE_ROOT/scripts/add-changelog-header.sh',
] # Nested use of shell to expand variables.
